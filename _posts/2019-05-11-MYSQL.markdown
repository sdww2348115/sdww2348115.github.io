---
layout: post
title:  "高性能MYSQL读书笔记"
date:   2019-05-11 23:38:00 +0800
categories: MYSQL DATABSE
permalink: /database/mysql
description: 高性能MYSQL第一章读书笔记
---

## 总结
第一章介绍了MYSQL数据库的整体架构、以SQL查询为引子，介绍了一条SQL语句整体的执行流程；
引出了数据库的连接、事务、锁等特性；最后介绍了多种存储引擎，简单介绍了这些引擎的实现和功能特点；最后简要介绍了MYSQL的版本历史。

## 整体架构
MYSQL的整体架构如下图所示

![mysql-architecture](../resources/img/mysql-architecture.png)

服务层比较特殊，大多数MYSQL的核心服务功能都在这一层，包括所有的内置函数（如日期、时间、数学、加密等）以及所有的跨存储引擎功能：存储过程、触发器、视图等。

### 连接器
连接器负责权限认证并管理数据库连接的上下文。通常情况下，MYSQL会为每一个connection建立一个单独的线程用于执行其命令，MYSQL5.5版本后开始支持线程池模型。

连接器会根据系统表中的内容验证用户信息，存储用户session信息，支持SSL等相关功能。

极客时间中MYSQL 45讲中提到：数据库链接查询后的内容会缓存在数据库链接对象中，如果一个connection使用后长时间不断开将会导致内存溢出，在MYSQL 5.7.27上测试并未发现该问题。


### 解析器、优化器以及执行器

SQL语句进入解析器后将被解析为语法树，再由优化器进行优化。优化器在处理时会忽略各存储引擎的不同（API基本相同），但是会根据API所返回的结果（包括统计结果）选择不同的优化策略。执行器根据优化器的结果调用存储引擎API，完成SQL语句的实际执行步骤。

### 查询缓存

缓存中的查询结果以key-value的形式进行存储，默认情况下查询语句首先会进入缓存中查找数据，但是对于一个表进行更新将导致该表所有缓存都被清空，因此其性能并没有预想中那么高。同时，由于代码层面JDBC框架缓存以及redis等多种缓存技术的应用，使得数据库的cache变得更加鸡肋，MYSQL在8.0版本以后就把缓存相关功能全部去掉了。

Tips：在查询语句中可以手动指定是否使用缓存。

## MYSQL中的各种logs

Mysql中含有多种日志文件，常见的有服务层的binlog以及innodb的redolog以及undolog。

### BinLog
BinLog由MYSQL的服务层产生，记录了所有`引起或可能引起数据库变更`的记录。主要作用是数据库备份还原、数据库迁移以及数据库主从同步等。核心本质都是提供语句级别的重放功能，使得多个数据之间数据保持一致。

Binlog通常由两部分组成：mysql-bin.000001数据文件以及mysql-bin.index索引文件，binlog中的数据以事件的形式进行存放，每一条数据包含了开始位置、结束位置、执行的SQL语句以及时间戳等数据。BinLog文件是根据文件大小进行滚动生成的，通过参数`max_binlog_size`可以指定每个binlog文件的最大大小（由于binlog以event为单位进行记录，遇到超大event时可能会超过该值），通过参数`expire_logs_days`可以记录binlog自动保存的天数，超过指定时期的binlog将被删除。这里的删除逻辑与kafka中的一样，日志文件将以最后一条记录的时间为准，如果设定的清理时间超过该值将导致整个日志文件都被删掉。

---
layout: post
title:  "G1 GC 停顿预测模型"
date:   2018-05-06 00:00:01 +0800
categories: jvm
permalink: /jvm/g1/PausePredictionModel
---

原文地址：[http://www.narihiro.info/g1gc-impl-book/scheduling.html](http://www.narihiro.info/g1gc-impl-book/scheduling.html)

## 基于历史的预测
根据停止时间的历史来预测下一个停止时间本质上是“基于历史数据预测未来数据”。HotSpotVM使用平均值和标准差来预测未来暂停的时间。

### 算术平均值，方差，标准偏差
HotSpot使用了基于方差与标准差的技术。首先让我们来了解这些术语。
一个班的三个人A，B，C的测试结果回来了。结果如下：

* A:50分
* B:70分
* C:90分

那么，A，B，C测试结果的“平均值”是多少？这很容易。通过以下公式进行计算即可：
``（50 + 60 + 90）/ 3 = 70 ``

如上所述，简单地将每个元素相加得到的和除以元素的数量称为`算术平均值`。这不是最熟悉的"平均"吗？   
假设你想知道A，B，C有多少偏离参考值。表示这种变化的值被称为标准差。我们这次计算参考值作为算术平均值。   
为了查看每个数据的变化，首先需要了解每个数据距参考平均值的距离。只要考虑“每个数据 - 平均值”，就可以获得差异，所以如果将这些差异相加并除以数据的数量，差异似乎就会出现。让我们试一下。
`` （（50-70）+（70​​-70）+（90-70））/ 3 = 0 ``

它已经变成了0 ...... 这是否意味着数据没有变化？但是，A，B，C时显然数据不均匀。

您所做的“每个数据 - 平均值”的错误意味着结果可能是负的。如果是负值，则求和时可能会抵消差值。为了避免负值的情况出现，我们将对每个值进行平方再求和。
`` （（50-70）** 2 +（70-70）** 2 +（90-70）** 2）/ 3 = 266 ``

答案是266。我知道这在某种程度上是不平衡的。像这样的平方数据的总和除以数据的值被称为`方差`。

由于该值是通过平方得到的值，因此我们计算平方根值。
`` Math.sqrt（266）.to_i＃=> 16在小数点后截断 ``

答案是16。该值是前面提到的标准差。`标准差`是衡量变化的标准。如果标准差很大，则可以判断数据是分散的。如果标准差为0，则可以判断完全没有变化。例如，在这种情况下，如果A，B，C的所有测试结果均为70，则标准差将为0。

### 平均衰减
HotSpot虚拟机通过所有历史数据来预测下一次将会得到的值。假设A的过去五次测试结果如下：

* 第一次：30分
* 第二次：35分
* 第三次：40分
* 第四次：42分
* 第五次：50分

那么，我们如何猜测第六次测试的分数呢？
处理历史数据时，HotSpot虚拟机将首先计算`衰减平均值`。衰减平均值与算术平均值不同，计算方法是这样的：越早的历史数据对平均值的影响变小。当前计算方法如下：
```
davg = 30
davg = 35 * 0.3 + davg * 0.7
davg = 40 * 0.3 + davg * 0.7
davg = 60 * 0.3 + davg * 0.7
davg = 50 * 0.3 + davg * 0.7
davg.to_i＃=> 44
```

设定最近一次的历史记录权重为30%，过去所有历史记录的衰减平均值的权重为70%，最终可以得到衰减平均值。通过以这种方式进行计算，可以减少较早历史数据对于平均值的影响。

为了让它更直观一些，我们来考虑一个例子，其中有十个历史记录和一个单独的评分。然后，在算术平均值的情况下，平均值如下图所示变化。
![avg_shift](../resources/img/avg_shift.png)

另一方面，在衰减平均值的情况下，其变化下图所示。
![davg_shift](../resources/img/davg_shift.png)

越早的数据在平均值中所占的比例越低，最新的值总是能占平均值权重的30%。

HotSpot采用当前的衰减平均值(davg)作为下一次预测的结果。

随着历史信息数据变老，它与最新数据无关。那么，如何找到降低过去数据（如衰减平均值）影响的平均值就会合适。

### 阻尼偏差

我们还将计算一个称为`衰减方差`的值以及`衰减平均值`。我们来看看计算方法。
```
davg = 30
dvar = 0
davg = 35 * 0.3 + davg * 0.7
dvar =（（35-davg）** 2）* 0.3 + dvar * 0.7
davg = 40 * 0.3 + davg * 0.7
dvar =（（40-davg）** 2）* 0.3 + dvar * 0.7
davg = 42 * 0.3 + davg * 0.7
dvar =（（42-davg）** 2）* 0.3 + dvar * 0.7
davg = 50 * 0.3 + davg * 0.7
dvar =（（50-davg）** 2）* 0.3 + dvar * 0.7
dvar.to_i＃=> 40
```

色散是实际值距参考值距离的值。这种情况下的参考值是“添加数据时整个历史的衰减平均值”。衰减平均值是预测值（=下次预期）。也就是说，此时的分散表示“实际数据距当时的预测值有多远”。此外，通过以与衰减平均相同的方式逐渐衰减过去数据的影响来获得色散。

之后，我们得到衰减色散的平方根就是`衰减标准偏差`。
`` Math.sqrt（dvar）.to_i＃=> 6``
此处获得的衰减标准差显示预测值与实际数据之间的差异。因此，可以预测，实际值将在预测值的正负6范围内波动。

### 预测包括变化
在HotSpot虚拟机中，该值在一定程度上有些不同。大多数情况下，用户所输入的"安全的预测值"计算方法如下：
`` 预测值包括变化=衰减平均值+（可靠性/ 100 *衰减标准偏差）``

这里引入了一个新的词汇：`可靠性`。可靠性是一个值，表示您相信通过衰减标准差获得的变化范围有多大。例如，如果衰减标准偏差为6，如果可靠性为100％，则将正值和负值的范围设置为6。如果可靠性为50％，则将其缩小至一半正负3。在HotSpot VM中，此可靠性默认指定为50％，可由用户启动JVM时手动指定。

将可靠范围内的变化的最大值和平均衰减值（预测值）相加，就能得到`安全预测值`。
`` 44 +（50 / 100.0 * 6）＃=> 47.0``
例如在HotspotVM的A测试的情况下，A中的下一个测试取47点及以下将被认为是安全的。47就是安全预测值。

`注：上述专业名词都是我乱翻译的，懂意思就好`

## 历史记录实现
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-03-26T23:25:29+08:00</updated><id>http://localhost:4000/</id><title type="html">sdww’s footprint</title><subtitle>Every flight of  light remains me how much I have yet to see.</subtitle><entry><title type="html">AbstractQueuedSynchronizer</title><link href="http://localhost:4000/source/AQS" rel="alternate" type="text/html" title="AbstractQueuedSynchronizer" /><published>2018-03-26T00:00:00+08:00</published><updated>2018-03-26T00:00:00+08:00</updated><id>http://localhost:4000/source/AbstractQueuedSynchronizer</id><content type="html" xml:base="http://localhost:4000/source/AQS">&lt;h1 id=&quot;abstractqueuedsynchronizer是什么&quot;&gt;AbstractQueuedSynchronizer是什么&lt;/h1&gt;
&lt;p&gt;AbstractQueuedSynchronizer(下文简称AQS)是Doug Lea大师所写的并发工具类之一，它通过queue的方式提供了一整套线程资源竞争/同步的基本模式，是各种lock接口实现类/并发工具类的基石。&lt;/p&gt;

&lt;h1 id=&quot;aqs的诞生背景及目的&quot;&gt;AQS的诞生背景及目的&lt;/h1&gt;

&lt;p&gt;在ReentrantLock等各种并发工具类被开发出来之前，JAVA的多线程同步方式为：synchronize关键字，Object.wait()方法，Object.notify()方法以及Object.notifyAll()方法。其中synchronize关键字解决的是多线程环境下资源的竞争问题（Lock语义），wait/notify系方法解决的是线程之间同步的问题。(这里不讨论volatile关键字以及CAS方法，因为volatile关键字在JDK1.5之前其内存语义并不能保证happens-before语义，仅提供了内存的可见性保证；而CAS关键字也无法考证其被正式大规模应用的版本)&lt;/p&gt;

&lt;p&gt;针对最基本的synchronize关键字而言，它能够解决大多数情况下的临界区的问题，但是功能相对孱弱：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;一旦进入synchronize关键字逻辑，线程将进入blocking等待的过程，无法响应中断。在某些条件下，在长时间获取不到锁的情况下我们可能需要手动中断线程尝试获取锁资源的行为。&lt;/li&gt;
  &lt;li&gt;无法实现异步获取锁的行为，即tryLock然后立即返回true || false；也无法实现获取锁时超时中断的功能。（此条可认为是1的补充）&lt;/li&gt;
  &lt;li&gt;synchronize关键字在多线程竞争临界区资源时不可控。通俗来说，synchronize关键字无法提供AQS的fair语义。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;解决了以上诸多问题的”加强版”资源竞争工具就是Lock接口类的各种实现，它们所共有的实现思路是：将JVM中Object Monitor相关的逻辑用JAVA代码实现，在这基础上为源代码增添了可以中断，异步获取，超时获取等功能。再将所有Lock所共有的行为模式抽象出来，就是本文的中心：AbstractQueuedSynchronizer类。&lt;/p&gt;

&lt;p&gt;将运行着的JAVA程序分为两层：底层为JVM虚拟机，上层为可控JAVA代码的话，可以认为AQS就是JAVA代码层的synchronize关键字。JVM所提供的wait/notify等方法与synchronize关键字息息相关：1.wait/notify方法必须被包含在synchronize语法块中；2.wait方法涉及到线程释放对应的锁资源。所以，要让AQS能够替代synchronize，必须实现线程之间的同步解决方案，即AQS的Condition模块。&lt;/p&gt;

&lt;p&gt;AQS的功能大致可以分为这么两块：1.多线程竞争临界区资源；2.多线程同步方案。本文将分别从这两个方面来介绍AQS。&lt;/p&gt;</content><author><name></name></author><summary type="html">AbstractQueuedSynchronizer是什么 AbstractQueuedSynchronizer(下文简称AQS)是Doug Lea大师所写的并发工具类之一，它通过queue的方式提供了一整套线程资源竞争/同步的基本模式，是各种lock接口实现类/并发工具类的基石。</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2018/03/25/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-03-25T17:09:01+08:00</published><updated>2018-03-25T17:09:01+08:00</updated><id>http://localhost:4000/jekyll/update/2018/03/25/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/03/25/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">hello!</title><link href="http://localhost:4000/test" rel="alternate" type="text/html" title="hello!" /><published>2018-03-25T17:09:01+08:00</published><updated>2018-03-25T17:09:01+08:00</updated><id>http://localhost:4000/hello</id><content type="html" xml:base="http://localhost:4000/test">&lt;h2 id=&quot;title&quot;&gt;Title&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; world!&lt;/p&gt;</content><author><name></name></author><summary type="html">Title hello world!</summary></entry></feed>